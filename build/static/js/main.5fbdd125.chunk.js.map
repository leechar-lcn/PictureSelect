{"version":3,"sources":["components/PictureSelect/index.tsx","App.tsx","index.tsx"],"names":["Paragraph","props","pictures","initValue","value","onChange","preview","useState","checkAll","setCheckAll","indeterminate","setIndeterminate","setValue","visable","setVisable","currImg","setCurrImg","useEffect","className","e","target","checked","map","item","id","style","marginBottom","length","Group","key","width","src","url","alt","onClick","ellipsis","title","visible","footer","onCancel","name","ReactDOM","render","App","document","getElementById"],"mappings":"4QAMQA,G,WAAAA,WAIO,WAACC,GAAiC,IAE7CC,EAIED,EAJFC,SACOC,EAGLF,EAHFG,MACAC,EAEEJ,EAFFI,SAJ4C,EAM1CJ,EADFK,eAL4C,WAQdC,oBAAS,GARK,mBAQvCC,EARuC,KAQ7BC,EAR6B,OASJF,oBAAS,GATL,mBASvCG,EATuC,KASxBC,EATwB,OAUpBJ,mBAA8BJ,GAVV,mBAUvCC,EAVuC,KAUhCQ,EAVgC,OAYhBL,oBAAS,GAZO,mBAYvCM,EAZuC,KAY9BC,EAZ8B,OAahBP,mBAAS,IAbO,mBAavCQ,EAbuC,KAa9BC,EAb8B,KA+B9C,OAJAC,qBAAU,WACRZ,EAASD,KACR,CAACA,EAAOC,IAGT,yBAAKa,UAAU,kBACb,uBACER,cAAeA,EACfL,SApBmB,SAACc,GACxBR,GAAiB,GACjBF,EAAYU,EAAEC,OAAOC,SACrBT,EAASO,EAAEC,OAAOC,QAAUnB,EAASoB,KAAI,SAACC,GAAD,OAAUA,EAAKC,MAAM,KAkB1DH,QAASb,EACTiB,MAAO,CAAEC,aAAc,KAJzB,qBAMMtB,EAAMuB,OANZ,sBAQA,sBAAUC,MAAV,CAAgBvB,SApBA,SAACc,GACnBR,IAAmBQ,EAAEQ,QAAUR,EAAEQ,OAASzB,EAASyB,QACnDlB,EAAYU,EAAEQ,SAAWzB,EAASyB,QAClCf,EAASO,IAiBgCf,MAAOA,GAC3CF,EAASoB,KAAI,SAACC,GAAD,OACZ,yBAAKM,IAAKN,EAAKC,IACb,uBAAUpB,MAAOmB,EAAKC,GAAIN,UAAU,cACpC,yBACEY,MAhDG,IAiDHC,IAAKR,EAAKS,IACVC,IAAI,GACJC,QAAS,WACPlB,EAAWO,EAAKS,KAChBlB,GAAW,MAGf,kBAACd,EAAD,CAAWyB,MAAO,CAAEK,MAxDf,KAwDkCK,UAAQ,GAC5CZ,EAAKS,UAKb1B,EACC,uBACEwB,MAAO,IACPM,MAAM,2BACNC,QAASxB,EACTyB,OAAQ,KACRC,SAAU,kBAAMzB,GAAW,KAE3B,yBAAKiB,IAAKhB,EAASe,MAAM,OAAOG,IAAI,MAEpC,OC7EJ/B,EAAsC,CAC1C,CACEsB,GAAI,IACJgB,KAAM,MACNR,IACE,uEAEJ,CACER,GAAI,IACJgB,KAAM,MACNR,IACE,uEAEJ,CACER,GAAI,IACJgB,KAAM,MACNR,IACE,wEAIS,aAAO,IAAD,EACOzB,mBAAS,CAAC,MADjB,mBACZH,EADY,KACLQ,EADK,KAGnB,OACE,6BACE,kBAAC,EAAD,CAAeV,SAAUA,EAAUE,MAAOA,EAAOC,SAAUO,M,OCxBjE6B,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5fbdd125.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Checkbox, Typography, Modal } from \"antd\";\r\nimport { CheckboxValueType } from \"antd/lib/checkbox/Group\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\nimport \"./index.less\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nconst imgWidth = 117;\r\n\r\nexport default (props: PictureSelect.IProps) => {\r\n  const {\r\n    pictures,\r\n    value: initValue,\r\n    onChange,\r\n    preview = true,\r\n  } = props;\r\n\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const [indeterminate, setIndeterminate] = useState(false);\r\n  const [value, setValue] = useState<CheckboxValueType[]>(initValue);\r\n\r\n  const [visable, setVisable] = useState(false);\r\n  const [currImg, setCurrImg] = useState(\"\");\r\n\r\n  const onCheckAllChange = (e: CheckboxChangeEvent) => {\r\n    setIndeterminate(false);\r\n    setCheckAll(e.target.checked);\r\n    setValue(e.target.checked ? pictures.map((item) => item.id) : []);\r\n  };\r\n\r\n  const onCheckItem = (e: CheckboxValueType[]) => {\r\n    setIndeterminate(!!e.length && e.length < pictures.length);\r\n    setCheckAll(e.length === pictures.length);\r\n    setValue(e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onChange(value);\r\n  }, [value, onChange]);\r\n\r\n  return (\r\n    <div className=\"picture-select\">\r\n      <Checkbox\r\n        indeterminate={indeterminate}\r\n        onChange={onCheckAllChange}\r\n        checked={checkAll}\r\n        style={{ marginBottom: 16 }}\r\n      >\r\n        已选中{value.length}个文件\r\n      </Checkbox>\r\n      <Checkbox.Group onChange={onCheckItem} value={value}>\r\n        {pictures.map((item) => (\r\n          <div key={item.id}>\r\n            <Checkbox value={item.id} className=\"check-box\" />\r\n            <img\r\n              width={imgWidth}\r\n              src={item.url}\r\n              alt=\"\"\r\n              onClick={() => {\r\n                setCurrImg(item.url);\r\n                setVisable(true);\r\n              }}\r\n            />\r\n            <Paragraph style={{ width: imgWidth }} ellipsis>\r\n              {item.url}\r\n            </Paragraph>\r\n          </div>\r\n        ))}\r\n      </Checkbox.Group>\r\n      {preview ? (\r\n        <Modal\r\n          width={800}\r\n          title=\"图片预览\"\r\n          visible={visable}\r\n          footer={null}\r\n          onCancel={() => setVisable(false)}\r\n        >\r\n          <img src={currImg} width=\"100%\" alt=\"\" />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { PictureSelect } from \"src/components\";\n\nconst pictures: PictureSelect.ItemProps[] = [\n  {\n    id: \"1\",\n    name: \"foo\",\n    url:\n      \"https://goss.veer.com/creative/vcg/veer/800water/veer-151072756.jpg\",\n  },\n  {\n    id: \"2\",\n    name: \"foo\",\n    url:\n      \"https://goss.veer.com/creative/vcg/veer/800water/veer-153835898.jpg\",\n  },\n  {\n    id: \"3\",\n    name: \"foo\",\n    url:\n      \"https://goss.veer.com/creative/vcg/veer/800water/veer-144515959.jpg\",\n  },\n];\n\nexport default () => {\n  const [value, setValue] = useState([\"1\"]);\n\n  return (\n    <div>\n      <PictureSelect pictures={pictures} value={value} onChange={setValue} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"normalize.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}